import telebot
from telebot import types
from telebot.types import WebAppInfo
import os
from dotenv import load_dotenv



load_dotenv()
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

bot = telebot.TeleBot(BOT_TOKEN)

ALLOWED_USER_ID = 898641850
# ALLOWED_USER_ID = 490973300 # –õ–µ—Ä–∞
my_chat_id = ALLOWED_USER_ID

users = {}         # –°–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_id: username}
blacklist = set()  # –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler()
def info(message):
    if message.text.lower() == '/start' or message.text.lower() == '/find_love':
        username = message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        add_user(message.chat.id, username, message)
        print('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', users)

    elif message.text.lower() == '/help':
        help(message)
    
    elif message.text.lower() == '/user_list' and message.from_user.id == ALLOWED_USER_ID:
        list_users(message)

    elif message.text.lower() == '/blacklist' and message.from_user.id == ALLOWED_USER_ID:
        blacklist_users(message)
    
    elif  message.text.startswith('/remove_user') and message.from_user.id == ALLOWED_USER_ID:
        remove_user(message)
    
    elif message.text.startswith('/unblacklist') and message.from_user.id == ALLOWED_USER_ID:
        unblacklist_user(message)

    elif message.text.lower() == '/clear_users' and message.from_user.id == ALLOWED_USER_ID:
        clear_users(message)

    elif message.text.lower() == '/clear_blacklist' and message.from_user.id == ALLOWED_USER_ID:
        clear_blacklist(message)
   
    # elif message.text.lower() == '/id':
    #     #bot.send_message(message.chat.id, f'ID: {message.from_user.id}\nUsername: {message.from_user.username}')
    #     #bot.send_message(message.chat.id, message)
    
    elif message.from_user.id == ALLOWED_USER_ID:
        forward_message_to_all(message)

    else:
        bot.delete_message(message.chat.id, message.message_id)




# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
def add_user(user_id, username, message):
    if user_id in blacklist:
        bot.send_message(user_id, '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω‚õîÔ∏è')
    else:
        users[user_id] = username.lower()
        hello(message)



# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start', 'find_love'])
def hello(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ù–∞–π—Ç–∏ —Å–≤–æ—é —Å—É–¥—å–±—É', web_app= WebAppInfo(url= 'https://lizavetathorch.github.io/astro_love/')))
    
    photo = open('./photo/Astrology.jpg', 'rb')
    bot.send_photo ( message.chat.id, photo, 
                      f'<b>{message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Astro Love</b>‚ú®\n\n –≠—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –º–∞—Ç—Ä–∏—Ü—ã –∏ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è —Å–æ–µ–¥–∏–Ω—è—é—Ç –ª—é–¥–µ–π, —Å–æ–∑–¥–∞–≤–∞—è –≥–ª—É–±–æ–∫–∏–µ –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Å–≤—è–∑–∏. –ó–¥–µ—Å—å –∑–≤—ë–∑–¥—ã –∏ —á–∏—Å–ª–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∏ –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞–π—Ç–∏ —Å–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é –ª—é–±–æ–≤—å.\n–ö–∞–∂–¥—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç—â–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ–±—ã –∫–∞–∂–¥–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø—Ä–∏–Ω–æ—Å–∏–ª–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π, –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–π –æ–ø—ã—Ç.',
                      parse_mode='HTML', reply_markup= markup 
                    )
    photo.close()



# –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, '–ü–æ –≤–µ–º –≤–æ–ø—Ä–æ—Å–æ–º –ø–∏—à–∏—Ç–µ @heroineVM\n–ê –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–ª–æ–º–∞–ª–æ—Å—å –ø–∏—à–∏—Ç–µ @EllabetDce')



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–∞–π–ª–∞–º–∏ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ —Ç.–¥.)
@bot.message_handler(content_types=['photo', 'video', 'document', 'audio', 'sticker', 'voice', 'video_note', 'location', 'contact'])
def handle_non_text_messages(message):
    if message.from_user.id == ALLOWED_USER_ID:
        forward_message_to_all(message)

    else:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–∞–π–ª—ã')
        bot.delete_message(message.chat.id, message.message_id)



# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def forward_message_to_all(message):
    for user_id in users:
        try:
            bot.copy_message(user_id, message.chat.id, message.message_id)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª–µ–π
@bot.message_handler(commands=['user_list'])
def list_users(message):
    if users:
        users_list = []

        for user_id in users:
            user_info = bot.get_chat(user_id)
            username = user_info.username if user_info.username else "–ë–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            users_list.append(f"ID: {user_id}, Username: @{username}")
        
        
        users_list_text = "\n".join(users_list)
        bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n{users_list_text}")
    
    else:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")




# –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@bot.message_handler(commands=['clear_users'])
def clear_users(message):
    users.clear()
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç üßπ')



# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username –∏–ª–∏ user_id (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@bot.message_handler(commands=['remove_user'])
def remove_user(message):
    command_parts = message.text.split()
    if len(command_parts) < 2:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /remove_user <username –∏–ª–∏ user_id>")
        return

    identifier = command_parts[1].lower()

    user_id_to_remove = None

    if identifier.isdigit():
        user_id_to_remove = int(identifier) if int(identifier) in users else None
    else:
        user_id_to_remove = next((user_id for user_id, user_username in users.items() if user_username == identifier), None)

    if user_id_to_remove is not None:
        blacklist.add(user_id_to_remove)
        del users[user_id_to_remove]
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{identifier} —É–¥–∞–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
    else:
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{identifier} –Ω–µ –Ω–∞–π–¥–µ–Ω")


########################################################################################################################################################
#
# BLACKLIST
########################################################################################################################################################


# –ü—Ä–æ—Å–º–æ—Ç—Ä —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
@bot.message_handler(commands=['blacklist'])
def blacklist_users(message):
    if blacklist:
        users_blacklist = []

        for user_id in blacklist:
            user_info = bot.get_chat(user_id)
            username = user_info.username if user_info.username else "–ë–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            users_blacklist.append(f"ID: {user_id}, Username: @{username}")
        
        
        users_blacklist_text = "\n".join(users_blacklist)
        bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:\n\n{users_blacklist_text}")
    
    else:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç")



# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@bot.message_handler(commands=['unblacklist'])
def unblacklist_user(message):
    command_parts = message.text.split()
    if len(command_parts) < 2:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ /unblacklist <user_id>")
        return

    user_id_to_unblock = int(command_parts[1])  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ ID –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞

    if user_id_to_unblock in blacklist:
        blacklist.remove(user_id_to_unblock)  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞

        # –ü–æ–ª—É—á–∞–µ–º username, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        username = users.get(user_id_to_unblock, "–ë–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        users[user_id_to_unblock] = username  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—Ä–∞—Ç–Ω–æ –≤ users

        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_unblock} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    else:
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_unblock} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ")



# –û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
@bot.message_handler(commands=['clear_blacklist'])
def clear_blacklist(message):
    blacklist.clear()
    bot.send_message(message.chat.id, '–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç üßπ')




bot.infinity_polling()
